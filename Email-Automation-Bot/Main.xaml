<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="argument1" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1227.33333333333,10933.3333333333</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="72">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Word</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Word.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Core.Activities.SAP</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>System.Globalization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="70">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices.RuntimeInformation</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence sap:VirtualizedContainerService.HintSize="1237.33333333333,10868.6666666667" sap2010:WorkflowViewState.IdRef="Sequence_10">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="projectDataPath" />
      <Variable x:TypeArguments="x:String" Name="saveFilesToFolderPath" />
      <Variable x:TypeArguments="x:String" Name="currentWorkingFolderPath" />
      <Variable x:TypeArguments="x:String" Name="wordTemplatePath" />
      <Variable x:TypeArguments="x:String" Name="wordDocFolderPath" />
      <Variable x:TypeArguments="x:String" Name="pdfFolderPath" />
      <Variable x:TypeArguments="sd:DataTable" Name="sanitisedData" />
      <Variable x:TypeArguments="x:String" Name="projectCoordinators" />
      <Variable x:TypeArguments="x:String" Name="inputProjectCoordinator2" />
      <Variable x:TypeArguments="x:String" Name="inputProjectCoordinator1" />
      <Variable x:TypeArguments="x:String" Name="inputDeadlineDate2" />
      <Variable x:TypeArguments="x:String" Name="inputDeadlineDate1" />
      <Variable x:TypeArguments="x:String" Name="inputActivityDate" />
      <Variable x:TypeArguments="x:String" Name="deadlines" />
      <Variable x:TypeArguments="x:String" Name="formUrl" />
      <Variable x:TypeArguments="x:String" Name="onlineSlideDeckUrl" />
      <Variable x:TypeArguments="x:String" Name="KeepRunning" />
      <Variable x:TypeArguments="s:DateTime" Name="DeadlineDate1" />
      <Variable x:TypeArguments="x:Boolean" Default="True" Name="DeadlineDateBreak1" />
      <Variable x:TypeArguments="s:DateTime" Name="DeadlineDate2" />
      <Variable x:TypeArguments="x:Boolean" Default="True" Name="DeadlineDateBreak2" />
      <Variable x:TypeArguments="x:Boolean" Default="True" Name="ActivityDateBreak3" />
      <Variable x:TypeArguments="s:DateTime" Name="ActivityRealDate" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Project Coordinator 1" sap:VirtualizedContainerService.HintSize="1195.33333333333,239.333333333333" sap2010:WorkflowViewState.IdRef="InputDialog_1" IsPassword="False" Label="Please give the full name of the first project coordinator." Title="Project Coordinators Input">
      <ui:InputDialog.Result>
        <OutArgument x:TypeArguments="x:String">[inputProjectCoordinator1]</OutArgument>
      </ui:InputDialog.Result>
    </ui:InputDialog>
    <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Project Coordinator 2" sap:VirtualizedContainerService.HintSize="1195.33333333333,239.333333333333" sap2010:WorkflowViewState.IdRef="InputDialog_4" IsPassword="False" Label="Please give the full name of the second project coordinator." Title="Project Coordinators Input">
      <ui:InputDialog.Result>
        <OutArgument x:TypeArguments="x:String">[inputProjectCoordinator2]</OutArgument>
      </ui:InputDialog.Result>
    </ui:InputDialog>
    <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Donation Acknowledgement Deadline" sap:VirtualizedContainerService.HintSize="1195.33333333333,239.333333333333" sap2010:WorkflowViewState.IdRef="InputDialog_5" IsPassword="False" Label="Please input the deadline date (dd/MM/yyyy) for the prize money donation acknowledgement." Title="Deadlines Input">
      <ui:InputDialog.Result>
        <OutArgument x:TypeArguments="x:String">[inputDeadlineDate1]</OutArgument>
      </ui:InputDialog.Result>
    </ui:InputDialog>
    <ui:InterruptibleWhile sap2010:Annotation.AnnotationText="This is to check whether the format is correct and the date is valid." Condition="[DeadlineDateBreak1]" DisplayName="As long as the date format is incorrect" sap:VirtualizedContainerService.HintSize="1195.33333333333,476.666666666667" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_10">
      <ui:InterruptibleWhile.Body>
        <Sequence DisplayName="Overall Try Catch" sap:VirtualizedContainerService.HintSize="476,279.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_37">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch DisplayName="Try Catch Incorrect Date Format" sap:VirtualizedContainerService.HintSize="434,187.333333333333" sap2010:WorkflowViewState.IdRef="TryCatch_2">
            <TryCatch.Try>
              <Sequence DisplayName="Assign Variables and Another While Loop" sap:VirtualizedContainerService.HintSize="454.666666666667,894" sap2010:WorkflowViewState.IdRef="Sequence_38">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="412.666666666667,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_17">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:DateTime">[DeadlineDate1]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:DateTime">[DateTime.ParseExact(inputDeadlineDate1, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture)]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InterruptibleWhile Condition="[DateTime.Compare(DeadlineDate1, DateTime.Today).Equals(-1)]" DisplayName="As long as the input date is before today's date" sap:VirtualizedContainerService.HintSize="412.666666666667,599.333333333333" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_13">
                  <ui:InterruptibleWhile.Body>
                    <Sequence DisplayName="Input Dialog &amp; Re-assign" sap:VirtualizedContainerService.HintSize="376,432.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_41">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Donation Acknowledgement Deadline" sap:VirtualizedContainerService.HintSize="334,239.333333333333" sap2010:WorkflowViewState.IdRef="InputDialog_26" IsPassword="False" Label="Please input a valid date for the prize money donation acknowledgement." Title="Deadlines Input">
                        <ui:InputDialog.Result>
                          <OutArgument x:TypeArguments="x:String">[inputDeadlineDate1]</OutArgument>
                        </ui:InputDialog.Result>
                      </ui:InputDialog>
                      <Assign sap:VirtualizedContainerService.HintSize="334,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_24">
                        <Assign.To>
                          <OutArgument x:TypeArguments="s:DateTime">[DeadlineDate1]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="s:DateTime">[DateTime.ParseExact(inputDeadlineDate1, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture)]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </ui:InterruptibleWhile.Body>
                </ui:InterruptibleWhile>
                <Assign sap:VirtualizedContainerService.HintSize="412.666666666667,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_22">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[DeadlineDateBreak1]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:FormatException" sap:VirtualizedContainerService.HintSize="400,20.6666666666667" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:FormatException">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:FormatException" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Catch Exception" sap:VirtualizedContainerService.HintSize="376,463.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_51">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[exception.GetBaseException.ToString]" />
                    <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Donation Acknowledgement Deadline" sap:VirtualizedContainerService.HintSize="334,239.333333333333" sap2010:WorkflowViewState.IdRef="InputDialog_21" IsPassword="False" Label="Please input correct date format (dd/MM/yyyy) for the prize money donation acknowledgement." Title="Deadlines Input">
                      <ui:InputDialog.Result>
                        <OutArgument x:TypeArguments="x:String">[inputDeadlineDate1]</OutArgument>
                      </ui:InputDialog.Result>
                    </ui:InputDialog>
                  </Sequence>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </Sequence>
      </ui:InterruptibleWhile.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InterruptibleWhile>
    <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Free Parking Requst Deadline" sap:VirtualizedContainerService.HintSize="1195.33333333333,239.333333333333" sap2010:WorkflowViewState.IdRef="InputDialog_6" IsPassword="False" Label="Please input the date (dd/MM/yyyy) for free parking request deadline date." Title="Deadlines Input">
      <ui:InputDialog.Result>
        <OutArgument x:TypeArguments="x:String">[inputDeadlineDate2]</OutArgument>
      </ui:InputDialog.Result>
    </ui:InputDialog>
    <ui:InterruptibleWhile sap2010:Annotation.AnnotationText="This is to check whether the format is correct and the date is valid." Condition="[DeadlineDateBreak2]" DisplayName="As long as the date format is incorrect" sap:VirtualizedContainerService.HintSize="1195.33333333333,476.666666666667" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_16">
      <ui:InterruptibleWhile.Body>
        <Sequence DisplayName="Overall Try Catch" sap:VirtualizedContainerService.HintSize="476,279.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_44">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch DisplayName="Try Catch Incorrect Date Format" sap:VirtualizedContainerService.HintSize="434,187.333333333333" sap2010:WorkflowViewState.IdRef="TryCatch_5">
            <TryCatch.Try>
              <Sequence DisplayName="Assign Variables and Another While Loop" sap:VirtualizedContainerService.HintSize="454.666666666667,894" sap2010:WorkflowViewState.IdRef="Sequence_43">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="412.666666666667,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_25">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:DateTime">[DeadlineDate2]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:DateTime">[DateTime.ParseExact(inputDeadlineDate2, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture)]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InterruptibleWhile Condition="[DateTime.Compare(DeadlineDate2, DateTime.Today).Equals(-1)]" DisplayName="As long as the input date is before today's date" sap:VirtualizedContainerService.HintSize="412.666666666667,599.333333333333" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_15">
                  <ui:InterruptibleWhile.Body>
                    <Sequence DisplayName="Input Dialog &amp; Re-assign" sap:VirtualizedContainerService.HintSize="376,432.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_42">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Free Parking Requst Deadline" sap:VirtualizedContainerService.HintSize="334,239.333333333333" sap2010:WorkflowViewState.IdRef="InputDialog_28" IsPassword="False" Label="Please input a valid date free parking request deadline date." Title="Deadlines Input">
                        <ui:InputDialog.Result>
                          <OutArgument x:TypeArguments="x:String">[inputDeadlineDate2]</OutArgument>
                        </ui:InputDialog.Result>
                      </ui:InputDialog>
                      <Assign sap:VirtualizedContainerService.HintSize="334,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_26">
                        <Assign.To>
                          <OutArgument x:TypeArguments="s:DateTime">[DeadlineDate2]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="s:DateTime">[DateTime.ParseExact(inputDeadlineDate2, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture)]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </ui:InterruptibleWhile.Body>
                </ui:InterruptibleWhile>
                <Assign sap:VirtualizedContainerService.HintSize="412.666666666667,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_27">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[DeadlineDateBreak2]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:FormatException" sap:VirtualizedContainerService.HintSize="400,20.6666666666667" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:FormatException">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:FormatException" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Catch Exception" sap:VirtualizedContainerService.HintSize="376,463.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_52">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[exception.GetBaseException.ToString]" />
                    <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Free Parking Requst Deadline" sap:VirtualizedContainerService.HintSize="334,239.333333333333" sap2010:WorkflowViewState.IdRef="InputDialog_29" IsPassword="False" Label="Please input correct date format (dd/MM/yyyy) for free parking request deadline." Title="Deadlines Input">
                      <ui:InputDialog.Result>
                        <OutArgument x:TypeArguments="x:String">[inputDeadlineDate2]</OutArgument>
                      </ui:InputDialog.Result>
                    </ui:InputDialog>
                  </Sequence>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </Sequence>
      </ui:InterruptibleWhile.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InterruptibleWhile>
    <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Event Date" sap:VirtualizedContainerService.HintSize="1195.33333333333,239.333333333333" sap2010:WorkflowViewState.IdRef="InputDialog_3" IsPassword="False" Label="Please input the date (dd/MM/yyyy) of the event." Title="Event Date Input">
      <ui:InputDialog.Result>
        <OutArgument x:TypeArguments="x:String">[inputActivityDate]</OutArgument>
      </ui:InputDialog.Result>
    </ui:InputDialog>
    <ui:InterruptibleWhile sap2010:Annotation.AnnotationText="This is to check whether the format is correct and the date is valid." Condition="[ActivityDateBreak3]" DisplayName="As long as the date format is incorrect" sap:VirtualizedContainerService.HintSize="1195.33333333333,476.666666666667" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_18">
      <ui:InterruptibleWhile.Body>
        <Sequence DisplayName="Overall Try Catch" sap:VirtualizedContainerService.HintSize="476,279.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_47">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch DisplayName="Try Catch Incorrect Date Format" sap:VirtualizedContainerService.HintSize="434,187.333333333333" sap2010:WorkflowViewState.IdRef="TryCatch_6">
            <TryCatch.Try>
              <Sequence DisplayName="Assign Variables and Another While Loop" sap:VirtualizedContainerService.HintSize="462,851.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_46">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="420,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_28">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:DateTime">[ActivityRealDate]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:DateTime">[DateTime.ParseExact(inputActivityDate, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture)]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InterruptibleWhile Condition="[DateTime.Compare(ActivityRealDate, DateTime.Today).Equals(-1)]" DisplayName="As long as the input date is before today's date" sap:VirtualizedContainerService.HintSize="420,599.333333333333" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_17">
                  <ui:InterruptibleWhile.Body>
                    <Sequence DisplayName="Input Dialog &amp; Re-assign" sap:VirtualizedContainerService.HintSize="376,432.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_45">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Event Date" sap:VirtualizedContainerService.HintSize="334,239.333333333333" sap2010:WorkflowViewState.IdRef="InputDialog_30" IsPassword="False" Label="Please input a valid date for the activity." Title="Deadlines Input">
                        <ui:InputDialog.Result>
                          <OutArgument x:TypeArguments="x:String">[inputActivityDate]</OutArgument>
                        </ui:InputDialog.Result>
                      </ui:InputDialog>
                      <Assign sap:VirtualizedContainerService.HintSize="334,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_29">
                        <Assign.To>
                          <OutArgument x:TypeArguments="s:DateTime">[ActivityRealDate]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="s:DateTime">[DateTime.ParseExact(inputActivityDate, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture)]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </ui:InterruptibleWhile.Body>
                </ui:InterruptibleWhile>
                <Assign sap:VirtualizedContainerService.HintSize="420,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_30">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[ActivityDateBreak3]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:FormatException" sap:VirtualizedContainerService.HintSize="400,20.6666666666667" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:FormatException">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:FormatException" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Catch Exception" sap:VirtualizedContainerService.HintSize="376,463.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_53">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[exception.GetBaseException.ToString]" />
                    <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Event Date" sap:VirtualizedContainerService.HintSize="334,239.333333333333" sap2010:WorkflowViewState.IdRef="InputDialog_31" IsPassword="False" Label="Please input correct date format (dd/MM/yyyy) for activity date." Title="Deadlines Input">
                      <ui:InputDialog.Result>
                        <OutArgument x:TypeArguments="x:String">[inputActivityDate]</OutArgument>
                      </ui:InputDialog.Result>
                    </ui:InputDialog>
                  </Sequence>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </Sequence>
      </ui:InterruptibleWhile.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InterruptibleWhile>
    <ui:InterruptibleWhile Condition="[String.IsNullOrEmpty(formUrl)]" DisplayName="As long as the form url is empty" sap:VirtualizedContainerService.HintSize="1195.33333333333,498" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_19">
      <ui:InterruptibleWhile.Body>
        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,331.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_48">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Form Url" sap:VirtualizedContainerService.HintSize="334,239.333333333333" sap2010:WorkflowViewState.IdRef="InputDialog_7" IsPassword="False" Label="Please input the url for the form" Title="form url Input">
            <ui:InputDialog.Result>
              <OutArgument x:TypeArguments="x:String">[formUrl]</OutArgument>
            </ui:InputDialog.Result>
          </ui:InputDialog>
        </Sequence>
      </ui:InterruptibleWhile.Body>
    </ui:InterruptibleWhile>
    <ui:InterruptibleWhile Condition="[String.IsNullOrEmpty(onlineSlideDeckUrl)]" DisplayName="As long as the online slide deck url is empty" sap:VirtualizedContainerService.HintSize="1195.33333333333,498" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_20">
      <ui:InterruptibleWhile.Body>
        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,331.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_49">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Online Slide Deck Url" sap:VirtualizedContainerService.HintSize="334,239.333333333333" sap2010:WorkflowViewState.IdRef="InputDialog_8" IsPassword="False" Label="Please input the url for the slideDeck" Title="slidedeck url Input">
            <ui:InputDialog.Result>
              <OutArgument x:TypeArguments="x:String">[onlineSlideDeckUrl]</OutArgument>
            </ui:InputDialog.Result>
          </ui:InputDialog>
        </Sequence>
      </ui:InterruptibleWhile.Body>
    </ui:InterruptibleWhile>
    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message To Select SpreadSheet" sap:VirtualizedContainerService.HintSize="1195.33333333333,84" sap2010:WorkflowViewState.IdRef="MessageBox_4" Text="[&quot;Please Select The Spreadsheet Containing The Event Data.&quot;]" />
    <ui:SelectFile DisplayName="Select SpreadSheet" Filter="Excel|*.xlsx;*.xls;*.xlsm;*.xlsb" sap:VirtualizedContainerService.HintSize="1195.33333333333,137.333333333333" sap2010:WorkflowViewState.IdRef="SelectFile_1" SelectedFile="[projectDataPath]" />
    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message To Select Word Template" sap:VirtualizedContainerService.HintSize="1195.33333333333,84" sap2010:WorkflowViewState.IdRef="MessageBox_5" Text="[&quot;Please Select The Word Doc Template.&quot;]" />
    <ui:SelectFile DisplayName="Select Word Template" Filter="Word|*.docx;*.doc;*.docm;*.dotx;*.dot" sap:VirtualizedContainerService.HintSize="1195.33333333333,137.333333333333" sap2010:WorkflowViewState.IdRef="SelectFile_2" SelectedFile="[wordTemplatePath]" />
    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message To Select Saved Generated Files" sap:VirtualizedContainerService.HintSize="1195.33333333333,84" sap2010:WorkflowViewState.IdRef="MessageBox_3" Text="[&quot;Please Select Where To Save Generated Outputs.&quot;]" />
    <ui:SelectFolder DisplayName="Select Where To Save Events Folder" sap:VirtualizedContainerService.HintSize="1195.33333333333,78" sap2010:WorkflowViewState.IdRef="SelectFolder_1" SelectedFolder="[saveFilesToFolderPath]" />
    <Assign sap:VirtualizedContainerService.HintSize="1195.33333333333,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_7">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[currentWorkingFolderPath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[path.Combine(saveFilesToFolderPath, path.GetFileNameWithoutExtension(projectDataPath))]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Working Folder" sap:VirtualizedContainerService.HintSize="1195.33333333333,79.3333333333333" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[currentWorkingFolderPath]" />
    <ui:CopyFile ContinueOnError="{x:Null}" Destination="[currentWorkingFolderPath]" DisplayName="Copy SpreadSheet To Working Folder" sap:VirtualizedContainerService.HintSize="1195.33333333333,158" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="[projectDataPath]" />
    <ui:CopyFile ContinueOnError="{x:Null}" Destination="[currentWorkingFolderPath]" DisplayName="Copy Word Template To Working Folder" sap:VirtualizedContainerService.HintSize="1195.33333333333,158" sap2010:WorkflowViewState.IdRef="CopyFile_2" Overwrite="True" Path="[wordTemplatePath]" />
    <ui:MultipleAssign DisplayName="Assign SpreadSheet &amp; Template Path" sap:VirtualizedContainerService.HintSize="1195.33333333333,130" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[wordDocFolderPath]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[path.Combine(currentWorkingFolderPath, "GeneratedWordDocs")]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[pdfFolderPath]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[path.Combine(currentWorkingFolderPath, "GeneratedPdfs")]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Generated Word Doc Folder" sap:VirtualizedContainerService.HintSize="1195.33333333333,79.3333333333333" sap2010:WorkflowViewState.IdRef="CreateDirectory_2" Path="[wordDocFolderPath]" />
    <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Generated PDF Folder" sap:VirtualizedContainerService.HintSize="1195.33333333333,79.3333333333333" sap2010:WorkflowViewState.IdRef="CreateDirectory_3" Path="[pdfFolderPath]" />
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Use Excel" sap:VirtualizedContainerService.HintSize="1195.33333333333,2670" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="[path.Combine(currentWorkingFolderPath,  path.GetFileName(projectDataPath))]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence sap2010:Annotation.AnnotationText="Data Sanitisation is necessary as spreadsheet contains combined columns which UIPath can not easily handle." DisplayName="Sanitise Data" sap:VirtualizedContainerService.HintSize="569.333333333333,2561.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_11">
            <Sequence.Variables>
              <Variable x:TypeArguments="sd:DataTable" Name="RawData" />
              <Variable x:TypeArguments="sd:DataTable" Name="headings" />
              <Variable x:TypeArguments="x:Boolean" Name="ErrorDetected" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelReadRange AddHeaders="False" DataTable="[RawData]" DisplayName="Read Data From SpreadSheet" sap:VirtualizedContainerService.HintSize="527.333333333333,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="Sheet1">
              <ui:ExcelReadRange.Range>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:ExcelReadRange.Range>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelReadRange>
            <ui:RemoveDataRow Row="{x:Null}" DataTable="[RawData]" DisplayName="Remove First Data Row" sap:VirtualizedContainerService.HintSize="527.333333333333,186" sap2010:WorkflowViewState.IdRef="RemoveDataRow_1" RowIndex="0" />
            <ui:RemoveDataRow Row="{x:Null}" DataTable="[RawData]" DisplayName="Remove Second Data Row" sap:VirtualizedContainerService.HintSize="527.333333333333,186" sap2010:WorkflowViewState.IdRef="RemoveDataRow_2" RowIndex="0" />
            <ui:ExcelWriteRange AddHeaders="False" DataTable="[RawData]" DisplayName="Write Data From Cell A2" sap:VirtualizedContainerService.HintSize="527.333333333333,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="Sanitised Data" StartingCell="A2" />
            <ui:BuildDataTable DataTable="[headings]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="527.333333333333,58.6666666666667" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Project_x0020_Category&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Company&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Number_x0020_of_x0020_Judges&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Name1&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Email1&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Mobile1&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Dietery_x0020_restrictions1&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Name2&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Email2&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Mobile2&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Dietery_x0020_restrictions2&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Name3&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Email3&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Mobile3&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Dietery_x0020_restrictions&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Invoice_x0020_to&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Invoice_x0020_amount&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;comment&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
            <ui:ExcelWriteRange AddHeaders="True" DataTable="[headings]" DisplayName="Write Data From Cell A1" sap:VirtualizedContainerService.HintSize="527.333333333333,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_2" SheetName="Sanitised Data" StartingCell="A1" />
            <ui:ExcelReadRange AddHeaders="True" DataTable="[sanitisedData]" DisplayName="Read Data From Sanitised Data" sap:VirtualizedContainerService.HintSize="527.333333333333,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" SheetName="Sanitised Data">
              <ui:ExcelReadRange.Range>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:ExcelReadRange.Range>
            </ui:ExcelReadRange>
            <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[sanitisedData]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="527.333333333333,1298.66666666667" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Insert Number of Judges" sap:VirtualizedContainerService.HintSize="493.333333333333,1179.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_24">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:IfElseIf DisplayName="Check Different Conditions" sap:VirtualizedContainerService.HintSize="451.333333333333,1087.33333333333" sap2010:WorkflowViewState.IdRef="IfElseIf_1">
                      <ui:IfElseIf.ConditionBlocks>
                        <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                          <ui:IfElseIfBlock BlockType="If" Condition="[(Not String.IsNullOrEmpty(CurrentRow.Item(&quot;Name3&quot;).ToString)) and (Not String.IsNullOrEmpty(CurrentRow.Item(&quot;Email3&quot;).ToString))]">
                            <ui:IfElseIfBlock.Then>
                              <Sequence DisplayName="Number of Judges is 3" sap:VirtualizedContainerService.HintSize="304.666666666667,153.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="262.666666666667,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_13">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Object">[CurrentRow.Item("Number of Judges")]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Object">[3]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </ui:IfElseIfBlock.Then>
                          </ui:IfElseIfBlock>
                          <ui:IfElseIfBlock BlockType="ElseIf" Condition="[(Not String.IsNullOrEmpty(CurrentRow.Item(&quot;Name2&quot;).ToString)) and (Not String.IsNullOrEmpty(CurrentRow.Item(&quot;Email2&quot;).ToString))]">
                            <ui:IfElseIfBlock.Then>
                              <Sequence DisplayName="Number of Judges is 2" sap:VirtualizedContainerService.HintSize="304.666666666667,153.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="262.666666666667,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_14">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Object">[CurrentRow.Item("Number of Judges")]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Object">[2]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </ui:IfElseIfBlock.Then>
                          </ui:IfElseIfBlock>
                          <ui:IfElseIfBlock BlockType="ElseIf" Condition="[(Not String.IsNullOrEmpty(CurrentRow.Item(&quot;Name1&quot;).ToString)) and (Not String.IsNullOrEmpty(CurrentRow.Item(&quot;Email1&quot;).ToString))]">
                            <ui:IfElseIfBlock.Then>
                              <Sequence DisplayName="Number of Judges is 1" sap:VirtualizedContainerService.HintSize="304.666666666667,153.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="262.666666666667,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_15">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Object">[CurrentRow.Item("Number of Judges")]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Object">[1]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </ui:IfElseIfBlock.Then>
                          </ui:IfElseIfBlock>
                          <ui:IfElseIfBlock BlockType="Else">
                            <ui:IfElseIfBlock.Then>
                              <Sequence DisplayName="Number of Judges is 0" sap:VirtualizedContainerService.HintSize="304.666666666667,153.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_23">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="262.666666666667,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_16">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Object">[CurrentRow.Item("Number of Judges")]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Object">[0]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </ui:IfElseIfBlock.Then>
                          </ui:IfElseIfBlock>
                        </sc:BindingList>
                      </ui:IfElseIf.ConditionBlocks>
                    </ui:IfElseIf>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
            </ui:ForEachRow>
            <ui:ExcelWriteRange AddHeaders="True" DataTable="[sanitisedData]" DisplayName="Write Updated Each Row to DataTable" sap:VirtualizedContainerService.HintSize="527.333333333333,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_3" SheetName="Sanitised Data" StartingCell="A1" />
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[sanitisedData]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="1195.33333333333,1519.33333333333" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Create Corresponding Word Doc Template" sap:VirtualizedContainerService.HintSize="613.333333333333,1397.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_12">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="nameHeader" />
              <Variable x:TypeArguments="x:String" Name="emailHeader" />
              <Variable x:TypeArguments="x:String" Name="mobileHeader" />
              <Variable x:TypeArguments="x:String" Name="dieteryHeader" />
              <Variable x:TypeArguments="x:Int32" Name="numberOfJudges" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="571.333333333333,191.333333333333" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
              <ui:MultipleAssign.AssignOperations>
                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[nameHeader]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">Name</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[emailHeader]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">Email</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[mobileHeader]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">Mobile</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[dieteryHeader]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">Dietery restrictions</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                </scg:List>
              </ui:MultipleAssign.AssignOperations>
            </ui:MultipleAssign>
            <If Condition="[String.IsNullOrEmpty(CurrentRow.Item(&quot;Number of Judges&quot;).ToString)]" DisplayName="If Current Row Does not have Number of Judges" sap:VirtualizedContainerService.HintSize="571.333333333333,222" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <Assign sap:VirtualizedContainerService.HintSize="262.666666666667,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_8">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[numberOfJudges]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">0</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
              <If.Else>
                <Assign sap:VirtualizedContainerService.HintSize="262.666666666667,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_9">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[numberOfJudges]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(CurrentRow.Item("Number of Judges"))]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Else>
            </If>
            <If Condition="[numberOfJudges &gt; 3]" DisplayName="If Number of Judges &gt; 3" sap:VirtualizedContainerService.HintSize="571.333333333333,251.333333333333" sap2010:WorkflowViewState.IdRef="If_2">
              <If.Then>
                <Assign sap:VirtualizedContainerService.HintSize="262.666666666667,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_10">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[numberOfJudges]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">3</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
            </If>
            <If Condition="[numberOfJudges &gt; 0]" DisplayName="If Number of Judges &gt; 0" sap:VirtualizedContainerService.HintSize="571.333333333333,520.666666666667" sap2010:WorkflowViewState.IdRef="If_5">
              <If.Then>
                <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each Judge" sap:VirtualizedContainerService.HintSize="434,330.666666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Enumerable.Range(1,numberOfJudges).ToArray()]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:Object">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:Object" Name="i" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Create Word Template For Each Judge" sap:VirtualizedContainerService.HintSize="376,204.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_15">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Update-Word-Template workflow" sap:VirtualizedContainerService.HintSize="334,112.666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Update-Word-Template.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="SentDate">[DateTime.Now.ToString("yyyy/MM/dd")]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="CompanyName">[CurrentRow.Item("Company").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="PersonFirstName">[CurrentRow.Item(nameHeader + i.ToString).ToString.Split(" "c)(0)]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="PersonFullName">[CurrentRow.Item(nameHeader + i.ToString).ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="ProjectCategory">[CurrentRow.Item("Project Category").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="ActivityDate">[inputActivityDate]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="ProjectCoordinator1">[inputProjectCoordinator1]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="ProjectCoordinator2">[inputProjectCoordinator2]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="DeadlineDate1">[inputDeadlineDate1]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="DeadlineDate2">[inputDeadlineDate2]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="WordDocFolderPath">[wordDocFolderPath]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="PdfFolderPath">[pdfFolderPath]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="WordDocTemplatePath">[wordTemplatePath]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="FormUrl">[formUrl]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="OnlineSlideUrl">[onlineSlideDeckUrl]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                </ui:ForEach>
              </If.Then>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
    </ui:ForEachRow>
    <ui:MessageBox Caption="{x:Null}" AutoCloseAfter="00:00:00" Buttons="OkCancel" ChosenButton="[KeepRunning]" DisplayName="Allow Users To Check Generated Files" sap:VirtualizedContainerService.HintSize="1195.33333333333,84" sap2010:WorkflowViewState.IdRef="MessageBox_7" Text="[&quot;You can check generated files. Click Ok to continue, Cancel to stop&quot;]" />
    <If sap2010:Annotation.AnnotationText="We would like the user to be able to check the files. Therefore we choose not to put this sequence in the previous loop." Condition="[KeepRunning.Equals(&quot;Ok&quot;)]" DisplayName="If User is Fine With Files" sap:VirtualizedContainerService.HintSize="1195.33333333333,490.666666666667" sap2010:WorkflowViewState.IdRef="If_7">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Email Sending Template" sap:VirtualizedContainerService.HintSize="334,112.666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Email-Sending-Template.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="Email" />
            <InArgument x:TypeArguments="x:String" x:Key="PdfFolderPath">
              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="pdfFolderPath" />
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="PersonFullName" />
            <InArgument x:TypeArguments="x:String" x:Key="CompanyName" />
            <InArgument x:TypeArguments="x:String" x:Key="Deadline">
              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="inputDeadlineDate1.ToString" />
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="ActivityDate">
              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="inputActivityDate.ToString" />
            </InArgument>
            <InArgument x:TypeArguments="sd:DataTable" x:Key="sanitisedData">
              <mva:VisualBasicValue x:TypeArguments="sd:DataTable" ExpressionText="sanitisedData" />
            </InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Stop The Robot" sap:VirtualizedContainerService.HintSize="376,299.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_26">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Notify the User" sap:VirtualizedContainerService.HintSize="334,84" sap2010:WorkflowViewState.IdRef="MessageBox_8" Text="[&quot;Application Stopped. Files will not be sent out.&quot;]" />
          <Sequence DisplayName="Send Email To Judge" sap:VirtualizedContainerService.HintSize="334,83.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_54">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>